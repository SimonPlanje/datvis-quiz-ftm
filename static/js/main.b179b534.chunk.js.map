{"version":3,"sources":["components/checkPart/BarChart.js","components/checkPart/CheckForm.js","components/ShowImg.js","components/End.js","images/icon5.PNG","components/Check.js","components/ProgressBar.js","helper/formatBarData.js","components/Questions.js","components/Start.js","helper/data.js","images/icon1.PNG","images/icon2.PNG","images/icon3.PNG","images/icon4.PNG","App.js","reportWebVitals.js","index.js"],"names":["BarChart","ans","checkCounter","quiz","setCorrectAns","correctAns","select","selectAll","remove","useEffect","ImportedData","JSON","parse","localStorage","getItem","groupGender","group","d","gender","get","category","groupGeo","geo","sortData","age","slice","sort","a","b","d3","percentageTotaal","partij","data","map","replace","removeComma","fixNums","vw","document","querySelector","offsetWidth","margin","top","right","bottom","left","width","height","x","scaleBand","range","padding","x2","y","scaleLinear","svg","append","attr","domain","max","enter","bandwidth","antwoord","call","axisBottom","style","className","CheckForm","answers","id","data-name","transform","cx","cy","r","check","data-value","answer","ShowImg","currentQuestion","type","src","image","alt","End","Check","useState","setCheckCounter","showChecks","setShowChecks","showBtn","setShowBtn","end","showScenario","setShowScenario","vraag","onClick","href","length","icon5","ProgressBar","props","barWidth","bar","transition","backgroundColor","borderRadius","textAlign","dynamicAns","setDynamicAns","index","console","log","push","formatBarData","Questions","setAntwoord","antwoorden","completed","setCurrentQuestion","showResult","setShowResult","currentAns","setCurrentAns","setBarWidth","handleAnswer","classList","toggle","question","correct","indexType","indextype","setItem","stringify","alert","Start","setStartQuiz","setDataState","getData","fbData","eventData","name","getAllData","catch","err","fetchData","App","icon1","icon2","icon3","icon4","startQuiz","dataState","checkIcon","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b179b534.chunk.js","sourcesContent":["import * as d3 from \"d3\"\r\nimport { select, max, scaleBand, scaleLinear, axisBottom, axisLeft, group} from \"d3\"\r\nimport { useEffect } from \"react\"\r\n\r\n\r\n\r\nexport default function BarChart({ans, checkCounter, quiz, setCorrectAns, correctAns}) {\r\n\r\n  select('.barchartdiv').selectAll('svg').remove()\r\n\r\n  useEffect(() => {\r\n\r\n    //Formatting data---------------------------------------------------\r\n    const ImportedData = JSON.parse(localStorage.getItem('data'))\r\n\r\n    const groupGender = group(ImportedData, d=> d.gender).get(quiz[checkCounter].category.gender)\r\n    const groupGeo = group(groupGender, d=> d.geo).get(quiz[checkCounter].category.geo)\r\n    const groupAge = group(groupGeo, d=> d.age).get(quiz[checkCounter].category.age)\r\n\r\n    const sortData = groupAge.slice().sort((a, b) => d3.descending(a.percentageTotaal, b.percentageTotaal))\r\n\r\n    setCorrectAns(sortData[0].partij)\r\n\r\n    removeComma(sortData)\r\n    fixNums(sortData)\r\n\r\n    function removeComma(data){\r\n      return data.map(d => d.percentageTotaal = d.percentageTotaal.replace(',', '.'))\r\n    }\r\n\r\n    function fixNums(data){\r\n      return data.map(d => d.percentageTotaal = +d.percentageTotaal)\r\n    }\r\n\r\n    const data = sortData\r\n    const vw = document.querySelector('.CheckAns').offsetWidth\r\n\r\n    //Create barchart--------------------------------------------------------\r\n    if(data){\r\n\r\n      // set the dimensions and margins of the graph\r\n        const margin = {top: 0, right: 0, bottom: 80, left: 0},\r\n          width = vw - margin.left - margin.right,\r\n          height = 150 - margin.top - margin.bottom\r\n\r\n          // if(vw > 1000){\r\n          //  const margin = {top: 0, right: 0, bottom: 80, left: 0},\r\n          // width = 300 - margin.left - margin.right,\r\n          // height = 150 - margin.top - margin.bottom\r\n          // }\r\n\r\n\r\n      // set the ranges\r\n      const x = scaleBand()\r\n        .range([0, width])\r\n        .padding(0.1);\r\n\r\n      // set the ranges\r\n      const x2 = scaleBand()\r\n      .range([0, width])\r\n      .padding(0.1);\r\n\r\n      const y = scaleLinear()\r\n        .range([height, 0])\r\n\r\n\r\n      // append the svg object to the div\r\n      // append a 'group' element to 'svg'\r\n      // moves the 'group' element to the top left margin\r\n      const svg = select(\".barchartdiv\").append(\"svg\")\r\n        .attr(\"width\", width + margin.left + margin.right)\r\n        .attr(\"height\", height + margin.top + margin.bottom)\r\n        .append(\"g\")\r\n        .attr(\"transform\", \r\n              \"translate(\" + margin.left + \",\" + margin.top + \")\");\r\n\r\n      // Scale the range of the data in the domains\r\n      x.domain(data.map(d => d.partij))\r\n      x2.domain(data.map(d => d.partij))\r\n\r\n\r\n      y.domain([0, max(data, d => d.percentageTotaal)])\r\n\r\nsvg.selectAll('rect').data(data)\r\n      .enter().append(\"rect\")\r\n      .attr(\"x\", d => x(d.partij))\r\n      .attr(\"width\", x.bandwidth())\r\n      .attr(\"y\", d => y(d.percentageTotaal))\r\n      .attr(\"height\", d => height - y(d.percentageTotaal))\r\n      .attr(\"fill\", function(d){\r\n          if(ans[checkCounter].antwoord === d.partij){\r\n            return 'var(--ftm-red)'\r\n          }else if(correctAns === d.partij){\r\n            return 'green'\r\n          }else{\r\n            return 'var(--form-grey)'\r\n          }\r\n        })\r\n    \r\n    \r\n      \r\n      // add the x Axis\r\n      svg.append(\"g\")\r\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n      .call(axisBottom(x));\r\n\r\n      svg.selectAll('text')\r\n      .attr(\"y\", 0)\r\n      .attr(\"x\", 9)\r\n      .attr(\"dy\", \".35em\")\r\n      .attr(\"transform\", \"rotate(90)\")\r\n      .style(\"text-anchor\", \"start\");\r\n\r\n      svg.selectAll('.domain').remove()\r\n      svg.selectAll('.tick line').remove()\r\n\r\n      //OPTIONAL ADD Y AXIS (no need i think)\r\n      // add the y Axis\r\n      // svg.append(\"g\")\r\n      //    .call(axisLeft(y));\r\n\r\n      // svg.append('g')\r\n      //   .call(axisBottom(x2))\r\n      //   .y(function(d){\r\n      //     console.log(d)\r\n      //   })\r\n    }\r\n  });\r\n\r\n  return(\r\n    <div className=\"barchartdiv\" width='100%' >\r\n    </div>\r\n  )\r\n}\r\n","export default function CheckForm({answers}) {\r\n\r\n  return (\r\n    <div className=\"CheckForm\" >\r\n         <div className='button'>\r\n\r\n<span >\r\n<svg id=\"Artboard_2\" data-name=\"Artboard â€“ 2\" className=\"cls-1\">\r\n<rect className=\"cls-14\" width=\"52\" height=\"52\"/>\r\n<g id=\"Rectangle_116\" data-name=\"Rectangle 116\" className=\"cls-12\">\r\n<rect className=\"cls-15\" width=\"52\" height=\"52\"/>\r\n<rect className=\"cls-16\" x=\"1\" y=\"1\" width=\"50\" height=\"50\"/>\r\n</g>\r\n<path id=\"Path_44\" data-name=\"Path 44\" className=\"cls-13\" d=\"M0,0H36V36H0Z\" transform=\"translate(8 8)\"/>\r\n<circle id=\"Ellipse_53\" data-name=\"Ellipse 53\" className=\"cls-14\" cx=\"14\" cy=\"14\" r=\"14\" transform=\"translate(12 12)\"/>\r\n</svg>\r\n\r\n</span>\r\n<span className={`is${answers.check}`}>\r\n<svg id=\"Artboard_2\" data-name=\"Artboard â€“ 2\" className=\"cls-1\">\r\n<rect className=\"cls-3\" width=\"52\" height=\"52\"/>\r\n<path id=\"Path_43\" data-name=\"Path 43\" className=\"cls-2\" d=\"M-3011.7,12604.991s11.39-7.488,12.615-5.355-11.808,14.413-7.713,13.893,24.095-19.039,24.095-15.975-24.095,25-24.095,28.232,19.814-14.014,24.095-15.29-6.976,10.194-6.976,10.194\" transform=\"matrix(0.966, 0.259, -0.259, 0.966, 6184.751, -11378.36)\"/>\r\n</svg>\r\n\r\n</span>\r\n<button data-value={answers.answer} >{answers.answer}</button>\r\n</div>\r\n    </div>\r\n  );\r\n}\r\n ","export default function ShowImg({quiz, currentQuestion}) {\r\n\r\n\r\n  return (\r\n    <div className=\"ShowImg\">\r\n        <p>{quiz[currentQuestion].type}</p>\r\n        <img src={quiz[currentQuestion].image} alt='afbeelding bij vraag'></img>\r\n    </div>\r\n  );\r\n}","export default function End() {\r\n\r\n\r\n  return (\r\n    <div className=\"end\">\r\n        <h2>Eindscherm</h2>\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/icon5.589837df.PNG\";","import React, {useState} from 'react'\r\nimport Barchart from './checkPart/BarChart'\r\nimport CheckForm from './checkPart/CheckForm'\r\nimport ShowImg from './ShowImg'\r\nimport End from './End'\r\nimport icon5 from '../images/icon5.PNG'\r\n\r\nexport default function Check({quiz}) {\r\n\r\n\r\nconst ans = JSON.parse(localStorage.getItem('antwoorden'));\r\n\r\nconst [checkCounter, setCheckCounter] = useState(0)\r\nconst [showChecks, setShowChecks] = useState(false)\r\nconst [showBtn, setShowBtn] = useState(false)\r\nconst [end, setEnd] = useState(false)\r\n\r\nconst [correctAns, setCorrectAns] = useState(null)\r\n\r\nconst [showScenario, setShowScenario] = useState('kennis')\r\n\r\n\r\nfunction handleNext(){\r\n\r\n  const nextCheck = checkCounter + 1\r\n\r\n\r\n  if(nextCheck < ans.length-1){\r\n    setShowScenario(quiz[checkCounter+1].type)\r\n    setCheckCounter(checkCounter + 1)\r\n\r\n  }else{\r\n    setCheckCounter(checkCounter + 1)\r\n    setShowBtn(true)\r\n  }\r\n}\r\n\r\nfunction handlePrevious(){\r\n  setShowBtn(false)\r\n\r\n  const prevCheck = checkCounter - 1\r\n  if(prevCheck > 0){\r\n    setShowScenario(quiz[checkCounter-1].type)\r\n\r\n    setCheckCounter(checkCounter - 1)\r\n  }else{\r\n    setCheckCounter(0)\r\n  }\r\n}\r\n\r\nfunction handleChecks(){\r\n  setShowChecks(true)\r\n}\r\n\r\nfunction handleEnd(){\r\n  setEnd(true)\r\n}\r\n\r\n  return (\r\n    <div className=\"CheckAns\">\r\n      {end ? (<>\r\n      <End />\r\n      </>):(<>\r\n      \r\n        {showChecks ? (\r\n          <>\r\n        <ShowImg quiz={quiz} currentQuestion={checkCounter}/>\r\n        <div className='question-section'>\r\n        <h2 className='question-text'>{ans[checkCounter].vraag}</h2>\r\n      </div>\r\n      <div className='check-section'>\r\n\r\n       <div className='answer-section'>\r\n\r\n\r\n          {showScenario === 'kennis' ? (<>\r\n          \t\t{quiz[checkCounter].answers.map(answers =>\r\n            <>\r\n           <CheckForm answers={answers}/>\r\n\r\n            </>\r\n            )}\r\n                      <h3>Jouw antwoord was <span className={`color${ans[checkCounter].check}`}>{ans[checkCounter].antwoord}</span></h3>\r\n            {ans[checkCounter].check\r\n      ? <h3>dit is het goede antwoord!</h3>\r\n      : <h3>het goed antwoord was <span className='colortrue'>{ans[checkCounter].ans}</span></h3>\r\n    } \r\n\r\n          </>) : (<>\r\n            <div className=\"legenda\">\r\n        <div className=\"legenda-rect\"></div>\r\n          <p>Jouw keuze: {ans[checkCounter].antwoord}</p>\r\n        </div>\r\n            \r\n                    <Barchart ans={ans} quiz={quiz} checkCounter={checkCounter} setCorrectAns={setCorrectAns} correctAns={correctAns}/>\r\n\r\n          </>)}\r\n\r\n          </div>\r\n\r\n    </div>  \r\n    <div className=\"checkBtns\">\r\n    <button className='prevBtn' onClick={handlePrevious}>Vorige</button>\r\n    {showBtn ? <a href='https://www.ftm.nl/gids-partijfinanciering' className='btn C-nextBtn'>Afronden</a>\r\n             : <button className='C-nextBtn' onClick={handleNext}>Volgende</button>\r\n    }\r\n    </div>    \r\n        \t\t\t</>) : (\r\n\t\t\t\t<>\r\n        <div className=\"gotocheck\">\r\n          <img src={icon5} alt='check icon'></img>\r\n          <h2>Je bent door de vragen heen, nu kan je kijken hoeveel je er goed had!</h2>\r\n          <button className='nextBtn' onClick={handleChecks}>Volgende</button>\r\n        </div>\r\n\t\t\t\t</>\r\n\r\n      )}\r\n      \r\n      </>)}\r\n\r\n  </div>\r\n  );\r\n}\r\n","const ProgressBar = (props) => {\r\nconst {barWidth} = props;\r\n\r\nconst containerStyles = {\r\n    height: 5,\r\n    width: '100%',\r\n    backgroundColor: 'transparent',\r\n  }\r\nconst bar = {\r\n    transition: 'width 1s ease-in-out',\r\n    height: '100%',\r\n    width: `${barWidth}%`,\r\n    backgroundColor: \"var(--ftm-red)\",\r\n    borderRadius: 'inherit',\r\n    textAlign: 'right'\r\n  }\r\n\r\n  return (\r\n    <div style={containerStyles} className=\"ProgressBar\">\r\n        <div style={bar} className='bar'>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProgressBar","import * as d3 from \"d3\"\r\nimport {  group } from \"d3\"\r\n\r\nasync function formatBarData(quiz, dynamicAns, setDynamicAns){\r\n    const ImportedData = JSON.parse(localStorage.getItem('data'))\r\n\r\nquiz.map((d,index) =>{\r\nconsole.log(index)\r\n    if(d.type === 'scenario'){\r\n        const groupGender = group(ImportedData, d=> d.gender).get(d.category.gender)\r\n        const groupGeo = group(groupGender, d=> d.geo).get(d.category.geo)\r\n        const groupAge = group(groupGeo, d=> d.age).get(d.category.age)\r\n      \r\n        const sortData = groupAge.slice().sort((a, b) => d3.descending(a.percentageTotaal, b.percentageTotaal))\r\n        console.log(sortData)\r\n        \r\n        dynamicAns.push([\r\n            {'partij': sortData[0].partij,\r\n            'check' : true\r\n            },\r\n            {'partij': sortData[1].partij,\r\n            'check' : false\r\n            },\r\n            {'partij': sortData[2].partij,\r\n            'check' : false\r\n            },\r\n        ])\r\n\r\n      \r\n      console.log(dynamicAns[0][0])\r\n    }else{return}\r\n\r\n\r\n\r\n\r\n})\r\n\r\n \r\n\r\n\r\n  \r\n\r\n\r\n}\r\n\r\nexport default formatBarData","import React, {useEffect, useState} from 'react'\r\n\r\nimport Check from './Check'\r\nimport ProgressBar from './ProgressBar'\r\nimport ShowImg from './ShowImg'\r\nimport formatBarData from '../helper/formatBarData'\r\n\r\nexport default function Questions({setAntwoord, antwoorden, quiz, dynamicAns, setDynamicAns}) {\r\n\r\nlet completed = 100/(quiz.length+1)\r\n\r\n\r\nconst [currentQuestion, setCurrentQuestion] = useState(0)\r\nconst [showResult, setShowResult] = useState(false)\r\nconst [currentAns, setCurrentAns] = useState(null)\r\n\r\n\r\nconst [barWidth, setBarWidth] = useState(completed)\r\n\r\n\r\nfunction handleAnswer(check, answer){\r\n  if(document.querySelector(`button.clickNext`)){\r\n    document.querySelector(`button.clickNext`).classList.replace(\"clickNext\", 'nextBtn')\r\n  }\r\n\r\n\r\n  if(document.querySelector(`button.selected`)){\r\n    document.querySelector(`button.selected`).classList.toggle('selected')\r\n  }else{\r\n  }\r\n  document.querySelector(`button[data-value=${answer}]`).classList.toggle('selected')\r\n\r\n\r\n  if(document.querySelector(`span.viewRed`)){\r\n    document.querySelector(`span.viewRed`).classList.toggle('viewRed')\r\n  }\r\n    document.querySelector(`span[data-value=${answer}]`).classList.toggle('viewRed')\r\n\r\n\r\n  setCurrentAns({\"vraag\" : quiz[currentQuestion].question, \"antwoord\" : answer, \"check\" : check, 'ans': quiz[currentQuestion].correct})\r\n}\r\n\r\nfunction handleNext(){\r\n\r\n    if(document.querySelector(`button.selected`)){\r\n      document.querySelector(`button.selected`).classList.toggle('selected')\r\n      document.querySelector(`span.viewRed`).classList.toggle('viewRed')\r\n    }\r\n  \r\n  if(currentAns){\r\n    document.querySelector(`button.nextBtn`).classList.replace(\"nextBtn\", 'clickNext')\r\n  \r\n    setBarWidth(barWidth + completed)\r\n    antwoorden.push(currentAns)\r\n  \r\n    const nextQuestion = currentQuestion + 1\r\n    if(nextQuestion < quiz.length){\r\n      setCurrentQuestion(currentQuestion + 1)\r\n      setCurrentAns(null)\r\n    }else{\r\n      localStorage.setItem('antwoorden', JSON.stringify(antwoorden))\r\n      setShowResult(true)\r\n    }\r\n  }else{\r\n    alert('Selecteer eerst een antwoord!')\r\n  }\r\n\r\n}\r\nconsole.log(currentQuestion)\r\nconst indexType = quiz[currentQuestion].indextype\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n    <ProgressBar barWidth={barWidth} />\r\n\r\n    <div className=\"Questions\">\r\n\t\t\t{showResult ? (\r\n\t\t\t\t<Check quiz={quiz} />\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n                <ShowImg quiz={quiz} currentQuestion={currentQuestion}/>\r\n\r\n\t\t\t\t\t<div className='question-section'>\r\n\t\t\t\t\t\t<div className='question-text'><h2>{quiz[currentQuestion].question}</h2></div>\r\n\t\t\t\t\t</div>\r\n          \t\t\t\t\t<div className='answer-section'>\r\n\t\t\t\t\t\t{quiz[currentQuestion].answers.map((answers, index) =>\r\n            <>\r\n            <div className='button'>\r\n            {quiz[currentQuestion].type === 'scenario' ? (\r\n              <>\r\n              <span onClick={() =>handleAnswer(dynamicAns[indexType][index].check, dynamicAns[indexType][index].partij)}>\r\n              <svg id=\"Artboard_2\" data-name=\"Artboard â€“ 2\" className=\"cls-1\">\r\n    <rect className=\"cls-14\" width=\"52\" height=\"52\"/>\r\n    <g id=\"Rectangle_116\" data-name=\"Rectangle 116\" className=\"cls-12\">\r\n      <rect className=\"cls-15\" width=\"52\" height=\"52\"/>\r\n      <rect className=\"cls-16\" x=\"1\" y=\"1\" width=\"50\" height=\"50\"/>\r\n    </g>\r\n    <path id=\"Path_44\" data-name=\"Path 44\" className=\"cls-13\" d=\"M0,0H36V36H0Z\" transform=\"translate(8 8)\"/>\r\n    <circle id=\"Ellipse_53\" data-name=\"Ellipse 53\" className=\"cls-14\" cx=\"14\" cy=\"14\" r=\"14\" transform=\"translate(12 12)\"/>\r\n  </svg>\r\n\r\n              </span>\r\n              <span data-value={dynamicAns[indexType][index].partij} onClick={() =>handleAnswer(dynamicAns[indexType][index].check, dynamicAns[indexType][index].partij)}>\r\n              <svg id=\"Artboard_2\" data-name=\"Artboard â€“ 2\" className=\"cls-1\">\r\n    <rect className=\"cls-3\" width=\"52\" height=\"52\"/>\r\n    <path id=\"Path_43\" data-name=\"Path 43\" className=\"cls-2\" d=\"M-3011.7,12604.991s11.39-7.488,12.615-5.355-11.808,14.413-7.713,13.893,24.095-19.039,24.095-15.975-24.095,25-24.095,28.232,19.814-14.014,24.095-15.29-6.976,10.194-6.976,10.194\" transform=\"matrix(0.966, 0.259, -0.259, 0.966, 6184.751, -11378.36)\"/>\r\n  </svg>\r\n              </span>\r\n</>\r\n            ) : (\r\n              <>\r\n              <span onClick={() =>handleAnswer(answers.check, answers.answer)}>\r\n              <svg id=\"Artboard_2\" data-name=\"Artboard â€“ 2\" className=\"cls-1\">\r\n    <rect className=\"cls-14\" width=\"52\" height=\"52\"/>\r\n    <g id=\"Rectangle_116\" data-name=\"Rectangle 116\" className=\"cls-12\">\r\n      <rect className=\"cls-15\" width=\"52\" height=\"52\"/>\r\n      <rect className=\"cls-16\" x=\"1\" y=\"1\" width=\"50\" height=\"50\"/>\r\n    </g>\r\n    <path id=\"Path_44\" data-name=\"Path 44\" className=\"cls-13\" d=\"M0,0H36V36H0Z\" transform=\"translate(8 8)\"/>\r\n    <circle id=\"Ellipse_53\" data-name=\"Ellipse 53\" className=\"cls-14\" cx=\"14\" cy=\"14\" r=\"14\" transform=\"translate(12 12)\"/>\r\n  </svg>\r\n\r\n              </span>\r\n              <span data-value={answers.answer} onClick={() =>handleAnswer(answers.check, answers.answer)}>\r\n              <svg id=\"Artboard_2\" data-name=\"Artboard â€“ 2\" className=\"cls-1\">\r\n    <rect className=\"cls-3\" width=\"52\" height=\"52\"/>\r\n    <path id=\"Path_43\" data-name=\"Path 43\" className=\"cls-2\" d=\"M-3011.7,12604.991s11.39-7.488,12.615-5.355-11.808,14.413-7.713,13.893,24.095-19.039,24.095-15.975-24.095,25-24.095,28.232,19.814-14.014,24.095-15.29-6.976,10.194-6.976,10.194\" transform=\"matrix(0.966, 0.259, -0.259, 0.966, 6184.751, -11378.36)\"/>\r\n  </svg>\r\n              </span>\r\n</>              \r\n            )}\r\n\r\n              {quiz[currentQuestion].type === 'scenario' ? (\r\n\r\n                            <button data-value={dynamicAns[indexType][index].partij} onClick={() =>handleAnswer(dynamicAns[indexType][index].check, dynamicAns[indexType][index].partij)}>{dynamicAns[indexType][index].partij}</button>\r\n              \r\n              ) : (\r\n                <button data-value={answers.answer} onClick={() =>handleAnswer(answers.check, answers.answer)}>{answers.answer}</button>\r\n              )}\r\n            </div>\r\n            </>\r\n            )}\r\n            <button className='clickNext' onClick={handleNext}>Volgende</button>\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n      )}\r\n\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n","export default function Start({setStartQuiz, quiz}) {\r\n\r\n    function handleStart(){\r\n        setStartQuiz(false)\r\n    }\r\n  return (\r\n    <div className=\"Start\">\r\n\r\n        <h1>Quiz over uitgaven van politieke partijen aan facebook en google advertenties.</h1>\r\n        <div className='time'>\r\n        <h2>VRAGEN <span className='biggertext'>{quiz.length}</span></h2>\r\n        <h2>TIJD <span>{quiz.length * 1.5}</span>  min</h2>\r\n        </div>\r\n        <p>Op google en facebook kunnen advertenties worden geplaatst gefocust op een specifieke doelgroep. Weet jij welke partijen jouw als belangrijke doelgroep zien? Doe de korte quiz...</p>\r\n        <button className='nextBtn' onClick={handleStart}>Start Quiz</button>\r\n    </div>\r\n  );\r\n}\r\n","import * as d3 from \"d3\"\r\n\r\nasync function fetchData(setDataState){\r\n\r\n    if(localStorage.data){\r\n        console.log('all clear')\r\n        setDataState('finished')\r\n\r\n        return\r\n    }else{\r\n        const fbData = \"https://docs.google.com/spreadsheets/d/119KqNUnKmnSKvQazSW4hv84UF0GgB5hp8ti_n_G4YGU/export?format=csv\"\r\n    \r\n        async function getData(name){\r\n            const data = await d3.csv(name)\r\n            return data\r\n        }\r\n    \r\n        async function getAllData() {\r\n                const eventData = await getData(fbData)\r\n\r\n\r\n                localStorage.setItem(\"data\", JSON.stringify(eventData))\r\n                setDataState('finished')\r\n        }\r\n    \r\n        getAllData().catch((err) => {\r\n            console.log(err)\r\n            console.log(\"handled!\") \r\n        })\r\n    }\r\n\r\n} \r\n\r\nexport default fetchData","export default __webpack_public_path__ + \"static/media/icon1.216e3b8f.PNG\";","export default __webpack_public_path__ + \"static/media/icon2.d31cb951.PNG\";","export default __webpack_public_path__ + \"static/media/icon3.7a08d16c.PNG\";","export default __webpack_public_path__ + \"static/media/icon4.145cb42b.PNG\";","import React, {useState, useEffect} from 'react'\n\nimport Questions from './components/Questions'\nimport Start from './components/Start'\nimport fetchData from './helper/data'\nimport formatBarData from './helper/formatBarData'\n\nimport icon1 from './images/icon1.PNG'\nimport icon2 from './images/icon2.PNG'\nimport icon3 from './images/icon3.PNG'\nimport icon4 from './images/icon4.PNG'\nimport icon5 from './images/icon5.PNG'\n\n\nexport default function App() {\n\n  const quiz = [\n    {\n      question: 'Op welk platform konden politieke partijen geen advertenties kopen?',\n      answers: [\n        {answer: 'Facebook', check: false},\n        {answer: 'Twitter', check: true},\n        {answer: 'Google', check: false},\n      ],\n      correct: 'Twitter',\n      type: 'kennis',\n      image: icon1\n  },\n  {\n    question: 'Welke partij adverteerde online met de campagne #10jaarRutte?',\n    answers: [\n      {answer: 'PVV', check: false},\n      {answer: 'VVD', check: false},\n      {answer: 'FvD', check: true},\n    ],\n    correct: 'FvD',\n    type: 'kennis',\n    image: icon2\n\n\n  },\n  {\n    question: 'De 27-jarige Sanne uit Groningen houdt ervan om na een lange dag werken bij de gemeente als … om lekker op de bank door haar Facebook-feed te scrollen. Van welke partij komt zij de meeste advertenties tegen tijdens het scrollen?',\n    answers: [\n      {answer: 'D66', check: false},\n      {answer: 'GroenLinks', check: true},\n      {answer: 'FvD', check: false},\n    ],\n    type: 'scenario',\n    indextype: 0,\n    image: icon3,\n    category: {\n      gender: 'vrouw',\n      age: '25-34',\n      geo: 'Groningen',\n  }\n\n  },\n  {\n  question: 'De 19-jarige Dennis kijkt op zondag altijd alle voetbalwedstrijden in zijn studentenkamer in Amsterdam. Zo nu en dan pakt hij zijn mobiel en zit hij op Instagram. Van welke partij ziet hij de meeste advertenties voorbij komen tijdens het scrollen?',\n  answers: [\n    {answer: 'PVV', check: false},\n    {answer: 'PvdA', check: false},\n    {answer: 'DENK', check: true},\n  ],\n  type: 'scenario',\n  indextype: 1,\n  image: icon4,\n  category: {\n    gender: 'man',\n    age: '18-24',\n    geo: 'Noord-Holland',\n}\n  },\n  ]\n\n\nconst [startQuiz, setStartQuiz] = useState(true)\nconst [antwoorden, setAntwoord] = useState([])\n\n\nconst [dynamicAns, setDynamicAns] = useState([])\n\n\n//Barchartload state\nconst [dataState, setDataState] = useState('loading')\n\nuseEffect(() => {\n  async function getData(){\n  await fetchData(setDataState)\n}\ngetData()\n\nformatBarData(quiz, dynamicAns, setDynamicAns)\n  }, [])\n\n\n  return (\n    <div className=\"App\">\n      {startQuiz ? \n      (<Start setStartQuiz={setStartQuiz} quiz={quiz}/>) : \n      (<Questions dynamicAns={dynamicAns} setDynamicAns={setDynamicAns} setAntwoord={setAntwoord} antwoorden={antwoorden} quiz={quiz} dataState={dataState} checkIcon={icon5}/>)\n    }\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals()"],"sourceRoot":""}