{"version":3,"sources":["components/checkPart/BarChart.js","components/checkPart/CheckForm.js","components/ShowImg.js","images/main.jpg","components/Check.js","components/ProgressBar.js","helper/formatBarData.js","components/Questions.js","components/Start.js","helper/data.js","images/icon1.jpg","images/icon2.jpg","images/icon3.jpg","images/icon4.jpg","images/icon5.jpg","images/icon6.jpg","images/icon7.jpg","images/icon8.jpg","images/icon9.jpg","App.js","reportWebVitals.js","index.js"],"names":["BarChart","ans","checkCounter","quiz","correctAns","setCorrectAns","plotData","select","selectAll","remove","useEffect","count","indextype","data","yValue","xValue","type","vw","document","querySelector","offsetWidth","d","partij","midden","percentageTotaal","margin","top","right","bottom","left","width","height","x","scaleBand","range","padding","y","scaleLinear","svg","append","attr","domain","map","console","log","max","antwoord","enter","bandwidth","call","axisBottom","style","className","CheckForm","answers","id","data-name","transform","cx","cy","r","check","data-value","answer","ShowImg","currentQuestion","src","image","alt","Check","dataState","totData","JSON","parse","localStorage","getItem","useState","setCheckCounter","showChecks","setShowChecks","showBtn","setShowBtn","showScenario","setShowScenario","vraag","onClick","href","length","class","mainimg","ProgressBar","props","barWidth","bar","transition","backgroundColor","borderRadius","textAlign","dynamicAns","data1","data2","dynamicAnsMoney","setTotData","a","index","rawData","fixNums","orderData","slice","sort","b","d3","push","groupGender","group","gender","get","category","groupGeo","geo","sortData","age","replace","cleanData","formatBarData","Questions","setAntwoord","antwoorden","completed","setCurrentQuestion","showResult","setShowResult","currentAns","setCurrentAns","setBarWidth","handleAnswer","classList","toggle","question","correct","indexType","setItem","stringify","alert","Start","setStartQuiz","link","getData","getAllData","eventData","name","catch","err","fetchData","App","icon1","icon2","icon3","icon4","icon5","icon6","icon7","icon8","icon9","startQuiz","totaalData","checkIcon","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.56ccb214.chunk.js","sourcesContent":["import * as d3 from \"d3\"\r\nimport { select, max, scaleBand, scaleLinear, axisBottom, axisLeft, group} from \"d3\"\r\nimport { useEffect } from \"react\"\r\n\r\n\r\n\r\nexport default function BarChart({ans, checkCounter, quiz, setCorrectAns, correctAns, plotData}) {\r\n  select('.barchartdiv').selectAll('svg').remove()\r\n\r\n  useEffect(() => {\r\n\r\n\r\n  let count = quiz[checkCounter].indextype;\r\n  let data = '';\r\n  let yValue = '';\r\n  let xValue = ''\r\n  let checkYourAns = '';\r\n\r\n  if(quiz[checkCounter].type === 'gokken'){\r\n    data = plotData\r\n  }else if(quiz[checkCounter].type === 'scenario'){\r\n    data = plotData[count]\r\n  }\r\n\r\n    const vw = document.querySelector('.CheckAns').offsetWidth\r\n\r\n    //Create barchart--------------------------------------------------------\r\n    if(data){\r\n\r\n      if(quiz[checkCounter].type === 'gokken'){\r\n        xValue = d => d.partij\r\n        yValue = d => d.midden\r\n      }else if(quiz[checkCounter].type === 'scenario'){\r\n        xValue = d => d.partij\r\n        yValue = d => d.percentageTotaal\r\n      }\r\n    \r\n\r\n      // set the dimensions and margins of the graph\r\n        const margin = {top: 0, right: 0, bottom: 80, left: 0},\r\n          width = vw - margin.left - margin.right,\r\n          height = 150 - margin.top - margin.bottom\r\n\r\n\r\n      // set the ranges\r\n      const x = scaleBand()\r\n        .range([0, width])\r\n        .padding(0.1);\r\n\r\n      // // set the ranges\r\n      // const x2 = scaleBand()\r\n      // .range([0, width])\r\n      // .padding(0.1);\r\n\r\n      const y = scaleLinear()\r\n        .range([height, 0])\r\n\r\n\r\n      // append the svg object to the div\r\n      // append a 'group' element to 'svg'\r\n      // moves the 'group' element to the top left margin\r\n      const svg = select(\".barchartdiv\").append(\"svg\")\r\n        .attr(\"width\", width + margin.left + margin.right)\r\n        .attr(\"height\", height + margin.top + margin.bottom)\r\n        .append(\"g\")\r\n        .attr(\"transform\", \r\n              \"translate(\" + margin.left + \",\" + margin.top + \")\");\r\n\r\n      // Scale the range of the data in the domains\r\n      x.domain(data.map(xValue))\r\n      console.log(x.domain())\r\n      // x2.domain(data.map(d => d.partij))\r\n\r\n\r\n      y.domain([0, max(data, yValue)])\r\n      console.log(y.range())\r\nconsole.log(ans[checkCounter].antwoord)\r\nconsole.log(correctAns)\r\n\r\nsvg.selectAll('rect').data(data)\r\n      .enter().append(\"rect\")\r\n      .attr(\"x\", d => x(xValue(d)))\r\n      .attr(\"width\", x.bandwidth())\r\n      .attr(\"y\", d => y(yValue(d)))\r\n      .attr(\"height\", d => height - y(yValue(d)))\r\n      .attr(\"fill\", function(d){\r\n          if(ans[checkCounter].antwoord === d.partij){\r\n            return 'var(--ftm-red)'\r\n          }else if(correctAns === d.partij){\r\n            return 'green'\r\n          }else{\r\n            return 'var(--form-grey)'\r\n          }\r\n        })\r\n    \r\n      // add the x Axis\r\n      svg.append(\"g\")\r\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n      .call(axisBottom(x));\r\n\r\n      svg.selectAll('text')\r\n          .attr(\"y\", 0)\r\n      .attr(\"x\", 9)\r\n      .attr(\"dy\", \".35em\")\r\n      .attr(\"transform\", \"rotate(90)\")\r\n      .style(\"text-anchor\", \"start\");\r\n\r\n      svg.selectAll('.domain').remove()\r\n      svg.selectAll('.tick line').remove()\r\n\r\n      //OPTIONAL ADD Y AXIS (no need i think)\r\n      // add the y Axis\r\n      // svg.append(\"g\")\r\n      //    .call(axisLeft(y));\r\n\r\n      // svg.append('g')\r\n      //   .call(axisBottom(x2))\r\n      //   .y(function(d){\r\n      //     console.log(d)\r\n      //   })\r\n    }\r\n  });\r\n\r\n  return(\r\n    <div className=\"barchartdiv\" width='100%' >\r\n    </div>\r\n  )\r\n}\r\n","export default function CheckForm({answers}) {\r\n\r\n  return (\r\n    <div className=\"CheckForm\" >\r\n         <div className='button'>\r\n\r\n<span >\r\n<svg id=\"Artboard_2\" data-name=\"Artboard â€“ 2\" className=\"cls-1\">\r\n<rect className=\"cls-14\" width=\"52\" height=\"52\"/>\r\n<g id=\"Rectangle_116\" data-name=\"Rectangle 116\" className=\"cls-12\">\r\n<rect className=\"cls-15\" width=\"52\" height=\"52\"/>\r\n<rect className=\"cls-16\" x=\"1\" y=\"1\" width=\"50\" height=\"50\"/>\r\n</g>\r\n<path id=\"Path_44\" data-name=\"Path 44\" className=\"cls-13\" d=\"M0,0H36V36H0Z\" transform=\"translate(8 8)\"/>\r\n<circle id=\"Ellipse_53\" data-name=\"Ellipse 53\" className=\"cls-14\" cx=\"14\" cy=\"14\" r=\"14\" transform=\"translate(12 12)\"/>\r\n</svg>\r\n\r\n</span>\r\n<span className={`is${answers.check}`}>\r\n<svg id=\"Artboard_2\" data-name=\"Artboard â€“ 2\" className=\"cls-1\">\r\n<rect className=\"cls-3\" width=\"52\" height=\"52\"/>\r\n<path id=\"Path_43\" data-name=\"Path 43\" className=\"cls-2\" d=\"M-3011.7,12604.991s11.39-7.488,12.615-5.355-11.808,14.413-7.713,13.893,24.095-19.039,24.095-15.975-24.095,25-24.095,28.232,19.814-14.014,24.095-15.29-6.976,10.194-6.976,10.194\" transform=\"matrix(0.966, 0.259, -0.259, 0.966, 6184.751, -11378.36)\"/>\r\n</svg>\r\n\r\n</span>\r\n<button data-value={answers.id} >{answers.answer}</button>\r\n</div>\r\n    </div>\r\n  );\r\n}\r\n ","export default function ShowImg({quiz, currentQuestion}) {\r\n\r\n\r\n  return (\r\n    <div className=\"ShowImg\">\r\n        <p>{quiz[currentQuestion].type}</p>\r\n        <img src={quiz[currentQuestion].image} alt='afbeelding bij vraag'></img>\r\n    </div>\r\n  );\r\n}","export default __webpack_public_path__ + \"static/media/main.119d013b.jpg\";","import React, { useState } from 'react';\r\nimport Barchart from './checkPart/BarChart';\r\nimport CheckForm from './checkPart/CheckForm';\r\nimport ShowImg from './ShowImg';\r\nimport mainimg from '../images/main.jpg';\r\n\r\nexport default function Check({ quiz, dataState, totData }) {\r\n  console.log(dataState);\r\n  const ans = JSON.parse(localStorage.getItem('antwoorden'));\r\n\r\n  const [checkCounter, setCheckCounter] = useState(0);\r\n  const [showChecks, setShowChecks] = useState(false);\r\n  const [showBtn, setShowBtn] = useState(false);\r\n\r\n  const [correctAns, setCorrectAns] = useState(null);\r\n\r\n  const [showScenario, setShowScenario] = useState('gokken');\r\n\r\n  function handleNext() {\r\n    const nextCheck = checkCounter + 1;\r\n\r\n    if (nextCheck < ans.length - 1) {\r\n      setShowScenario(quiz[checkCounter + 1].type);\r\n      setCheckCounter(checkCounter + 1);\r\n    } else {\r\n      setCheckCounter(checkCounter + 1);\r\n      setShowBtn(true);\r\n    }\r\n  }\r\n\r\n  function handlePrevious() {\r\n    setShowBtn(false);\r\n\r\n    const prevCheck = checkCounter - 1;\r\n    if (prevCheck > 0) {\r\n      setShowScenario(quiz[checkCounter - 1].type);\r\n\r\n      setCheckCounter(checkCounter - 1);\r\n    } else {\r\n      setCheckCounter(0);\r\n    }\r\n  }\r\n\r\n  function handleChecks() {\r\n    setShowChecks(true);\r\n  }\r\n\r\n  return (\r\n    <div className=\"CheckAns\">\r\n      {showChecks ? (\r\n        <>\r\n          <ShowImg quiz={quiz} currentQuestion={checkCounter} />\r\n          <div className=\"question-section\">\r\n            <h2 className=\"question-text\">{ans[checkCounter].vraag}</h2>\r\n          </div>\r\n          <div className=\"check-section\">\r\n            <div className=\"answer-section\">\r\n              {showScenario === 'kennis' && (\r\n                <>\r\n                  {quiz[checkCounter].answers.map((answers) => (\r\n                    <>\r\n                      <CheckForm answers={answers} />\r\n                    </>\r\n                  ))}\r\n                  <h3>\r\n                    Jouw antwoord was{' '}\r\n                    <span className={`color${ans[checkCounter].check}`}>\r\n                      {ans[checkCounter].antwoord}\r\n                    </span>\r\n                  </h3>\r\n                  {ans[checkCounter].check ? (\r\n                    <h3>dit is het goede antwoord!</h3>\r\n                  ) : (\r\n                    <h3>\r\n                      het goed antwoord was{' '}\r\n                      <span className=\"colortrue\">{ans[checkCounter].ans}</span>\r\n                    </h3>\r\n                  )}\r\n                </>\r\n              )}{' '}\r\n              {showScenario === 'scenario' && (\r\n                <>\r\n                  <div className=\"legenda\">\r\n                    <div className=\"legenda-rect\"></div>\r\n                    <p>Jouw keuze: {ans[checkCounter].antwoord}</p>\r\n                  </div>\r\n\r\n                  <Barchart\r\n                    plotData={dataState}\r\n                    ans={ans}\r\n                    quiz={quiz}\r\n                    checkCounter={checkCounter}\r\n                    setCorrectAns={setCorrectAns}\r\n                    correctAns={correctAns}\r\n                  />\r\n                </>\r\n              )}\r\n              {showScenario === 'gokken' && (\r\n                <>\r\n                  <div className=\"legenda\">\r\n                    <div className=\"legenda-rect\"></div>\r\n                    <p>Jouw keuze: {ans[checkCounter].antwoord}</p>\r\n                  </div>\r\n\r\n                  <Barchart\r\n                    plotData={totData}\r\n                    ans={ans}\r\n                    quiz={quiz}\r\n                    checkCounter={checkCounter}\r\n                    setCorrectAns={setCorrectAns}\r\n                    correctAns={correctAns}\r\n                  />\r\n                </>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className=\"btnSection\">\r\n            <div className=\"checkBtns\">\r\n              <button className=\"prevBtn\" onClick={handlePrevious}>\r\n                Vorige\r\n              </button>\r\n              {showBtn ? (\r\n                <a\r\n                  href=\"https://www.ftm.nl/gids-partijfinanciering\"\r\n                  className=\"btn C-nextBtn\"\r\n                >\r\n                  Afronden\r\n                </a>\r\n              ) : (\r\n                <button className=\"C-nextBtn\" onClick={handleNext}>\r\n                  Volgende\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <div className=\"gotocheck\">\r\n            <img class=\"mainimg\" src={mainimg} alt=\"check icon\"></img>\r\n            <h2>\r\n              Je bent door de vragen heen, nu kan je kijken hoeveel je er goed\r\n              had!\r\n            </h2>\r\n            <div className=\"btnSection\">\r\n              <button className=\"nextBtn\" onClick={handleChecks}>\r\n                Checken!\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","const ProgressBar = (props) => {\r\n  const { barWidth } = props;\r\n\r\n  const containerStyles = {\r\n    height: 5,\r\n    width: '100%',\r\n    backgroundColor: 'transparent',\r\n  };\r\n  const bar = {\r\n    transition: 'width 1s ease-in-out',\r\n    height: '100%',\r\n    width: `${barWidth}%`,\r\n    backgroundColor: 'var(--ftm-red)',\r\n    borderRadius: 'inherit',\r\n    textAlign: 'right',\r\n  };\r\n\r\n  return (\r\n    <div style={containerStyles} className=\"ProgressBar\">\r\n      <div style={bar} className=\"bar\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProgressBar;\r\n","import * as d3 from \"d3\"\r\nimport {  group, timeFormatDefaultLocale } from \"d3\"\r\n\r\nasync function formatBarData(quiz, dynamicAns, data1, dataState, data2, dynamicAnsMoney, setTotData){\r\n    // const ImportedData = JSON.parse(localStorage.getItem('data'))\r\n\r\nquiz.map((d,index)=>{\r\nconsole.log(d.type)\r\n    if(d.type === 'gokken'){\r\n        const rawData = data2   \r\n        console.log(rawData)\r\n       fixNums(rawData)\r\n   \r\n       function fixNums(data){\r\n         return data.map(d => d.midden = +d.midden)\r\n       }\r\n   \r\n       const orderData = rawData.slice().sort((a, b) => d3.descending(a.midden, b.midden))    \r\n       setTotData(orderData)\r\n       console.log(orderData)\r\n   \r\n        dynamicAnsMoney.push([\r\n            {'partij': orderData[0].partij,\r\n            'check' : true,\r\n            'id': orderData[0].partij\r\n            },\r\n            {'partij': orderData[1].partij,\r\n            'check' : false,\r\n            'id': orderData[1].partij\r\n            },\r\n            {'partij': orderData[2].partij,\r\n            'check' : false,\r\n            'id': orderData[2].partij\r\n            },\r\n        ])\r\n       \r\n      \r\n   console.log(dynamicAnsMoney)\r\n       \r\n       }else if(d.type === 'scenario' ){\r\n        const groupGender = group(data1, d=> d.gender).get(d.category.gender)\r\n        const groupGeo = group(groupGender, d=> d.geo).get(d.category.geo)\r\n        const groupAge = group(groupGeo, d=> d.age).get(d.category.age)\r\n      \r\n        const sortData = groupAge.slice().sort((a, b) => d3.descending(a.percentageTotaal, b.percentageTotaal))\r\n        console.log(sortData)\r\n    // setCorrectAns(sortData[0].partij)\r\n\r\n    removeComma(sortData)\r\n    fixNums(sortData)\r\n\r\n    function removeComma(data){\r\n      return data.map(d => d.percentageTotaal = d.percentageTotaal.replace(',', '.'))\r\n    }\r\n\r\n    function fixNums(data){\r\n      return data.map(d => d.percentageTotaal = +d.percentageTotaal)\r\n    }\r\n\r\n    let cleanData = sortData\r\n    \r\n    dataState.push(cleanData)     \r\n    \r\n        dynamicAns.push([\r\n            {'partij': cleanData[0].partij,\r\n            'check' : true,\r\n            'id': cleanData[0].partij\r\n            },\r\n            {'partij': cleanData[1].partij,\r\n            'check' : false,\r\n            'id': cleanData[1].partij\r\n            },\r\n            {'partij': cleanData[2].partij,\r\n            'check' : false,\r\n            'id': cleanData[2].partij\r\n            },\r\n        ])\r\n\r\n      \r\n    }else{console.log('kennsivraag')}\r\n\r\n})\r\n\r\n}\r\n\r\nexport default formatBarData","import React, { useEffect, useState } from 'react';\r\n\r\nimport Check from './Check';\r\nimport ProgressBar from './ProgressBar';\r\nimport ShowImg from './ShowImg';\r\nimport formatBarData from '../helper/formatBarData';\r\n\r\nexport default function Questions({\r\n  setAntwoord,\r\n  antwoorden,\r\n  quiz,\r\n  dynamicAns,\r\n  dynamicAnsMoney,\r\n  dataState,\r\n  totData,\r\n}) {\r\n  console.log(totData);\r\n  let completed = 100 / (quiz.length + 1);\r\n\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [showResult, setShowResult] = useState(false);\r\n  const [currentAns, setCurrentAns] = useState(null);\r\n\r\n  const [barWidth, setBarWidth] = useState(completed);\r\n\r\n  function handleAnswer(check, answer, id) {\r\n    console.log(dynamicAns);\r\n    console.log(id);\r\n    if (document.querySelector(`button.clickNext`)) {\r\n      document\r\n        .querySelector(`button.clickNext`)\r\n        .classList.replace('clickNext', 'nextBtn');\r\n    }\r\n\r\n    if (document.querySelector(`button.selected`)) {\r\n      document.querySelector(`button.selected`).classList.toggle('selected');\r\n    } else {\r\n    }\r\n    document\r\n      .querySelector(`button[data-value=${id}]`)\r\n      .classList.toggle('selected');\r\n\r\n    if (document.querySelector(`span.viewRed`)) {\r\n      document.querySelector(`span.viewRed`).classList.toggle('viewRed');\r\n    }\r\n    document\r\n      .querySelector(`span[data-value=${id}]`)\r\n      .classList.toggle('viewRed');\r\n\r\n    setCurrentAns({\r\n      vraag: quiz[currentQuestion].question,\r\n      antwoord: answer,\r\n      check: check,\r\n      ans: quiz[currentQuestion].correct,\r\n    });\r\n  }\r\n\r\n  function handleNext() {\r\n    if (document.querySelector(`button.selected`)) {\r\n      document.querySelector(`button.selected`).classList.toggle('selected');\r\n      document.querySelector(`span.viewRed`).classList.toggle('viewRed');\r\n    }\r\n\r\n    if (currentAns) {\r\n      document\r\n        .querySelector(`button.nextBtn`)\r\n        .classList.replace('nextBtn', 'clickNext');\r\n\r\n      setBarWidth(barWidth + completed);\r\n      antwoorden.push(currentAns);\r\n\r\n      const nextQuestion = currentQuestion + 1;\r\n      if (nextQuestion < quiz.length) {\r\n        setCurrentQuestion(currentQuestion + 1);\r\n        setCurrentAns(null);\r\n      } else {\r\n        localStorage.setItem('antwoorden', JSON.stringify(antwoorden));\r\n        setShowResult(true);\r\n      }\r\n    } else {\r\n      alert('Selecteer eerst een antwoord!');\r\n    }\r\n  }\r\n  //get the index of the type scenario from the quiz dataset\r\n  const indexType = quiz[currentQuestion].indextype;\r\n\r\n  return (\r\n    <div>\r\n      <ProgressBar barWidth={barWidth} />\r\n\r\n      <div className=\"Questions\">\r\n        {showResult ? (\r\n          <Check quiz={quiz} dataState={dataState} totData={totData} />\r\n        ) : (\r\n          <>\r\n            <ShowImg quiz={quiz} currentQuestion={currentQuestion} />\r\n\r\n            <div className=\"question-section\">\r\n              <div className=\"question-text\">\r\n                <h2>{quiz[currentQuestion].question}</h2>\r\n              </div>\r\n            </div>\r\n            <div className=\"answer-section\">\r\n              <div className=\"ans-options\">\r\n                {quiz[currentQuestion].answers.map((answers, index) => (\r\n                  <>\r\n                    <div className=\"button\">\r\n                      {quiz[currentQuestion].type === 'scenario' && (\r\n                        <>\r\n                          <span\r\n                            onClick={() =>\r\n                              handleAnswer(\r\n                                dynamicAns[indexType][index].check,\r\n                                dynamicAns[indexType][index].partij,\r\n                                dynamicAns[indexType][index].id\r\n                              )\r\n                            }\r\n                          >\r\n                            <svg\r\n                              id=\"Artboard_2\"\r\n                              data-name=\"Artboard â€“ 2\"\r\n                              className=\"cls-1\"\r\n                            >\r\n                              <rect className=\"cls-14\" width=\"52\" height=\"52\" />\r\n                              <g\r\n                                id=\"Rectangle_116\"\r\n                                data-name=\"Rectangle 116\"\r\n                                className=\"cls-12\"\r\n                              >\r\n                                <rect\r\n                                  className=\"cls-15\"\r\n                                  width=\"52\"\r\n                                  height=\"52\"\r\n                                />\r\n                                <rect\r\n                                  className=\"cls-16\"\r\n                                  x=\"1\"\r\n                                  y=\"1\"\r\n                                  width=\"50\"\r\n                                  height=\"50\"\r\n                                />\r\n                              </g>\r\n                              <path\r\n                                id=\"Path_44\"\r\n                                data-name=\"Path 44\"\r\n                                className=\"cls-13\"\r\n                                d=\"M0,0H36V36H0Z\"\r\n                                transform=\"translate(8 8)\"\r\n                              />\r\n                              <circle\r\n                                id=\"Ellipse_53\"\r\n                                data-name=\"Ellipse 53\"\r\n                                className=\"cls-14\"\r\n                                cx=\"14\"\r\n                                cy=\"14\"\r\n                                r=\"14\"\r\n                                transform=\"translate(12 12)\"\r\n                              />\r\n                            </svg>\r\n                          </span>\r\n                          <span\r\n                            data-value={dynamicAns[indexType][index].id}\r\n                            onClick={() =>\r\n                              handleAnswer(\r\n                                dynamicAns[indexType][index].check,\r\n                                dynamicAns[indexType][index].partij,\r\n                                dynamicAns[indexType][index].id\r\n                              )\r\n                            }\r\n                          >\r\n                            <svg\r\n                              id=\"Artboard_2\"\r\n                              data-name=\"Artboard â€“ 2\"\r\n                              className=\"cls-1\"\r\n                            >\r\n                              <rect className=\"cls-3\" width=\"52\" height=\"52\" />\r\n                              <path\r\n                                id=\"Path_43\"\r\n                                data-name=\"Path 43\"\r\n                                className=\"cls-2\"\r\n                                d=\"M-3011.7,12604.991s11.39-7.488,12.615-5.355-11.808,14.413-7.713,13.893,24.095-19.039,24.095-15.975-24.095,25-24.095,28.232,19.814-14.014,24.095-15.29-6.976,10.194-6.976,10.194\"\r\n                                transform=\"matrix(0.966, 0.259, -0.259, 0.966, 6184.751, -11378.36)\"\r\n                              />\r\n                            </svg>\r\n                          </span>\r\n                        </>\r\n                      )}\r\n                      {quiz[currentQuestion].type === 'gokken' && (\r\n                        <>\r\n                          <span\r\n                            onClick={() =>\r\n                              handleAnswer(\r\n                                dynamicAnsMoney[0][index].check,\r\n                                dynamicAnsMoney[0][index].partij,\r\n                                dynamicAnsMoney[0][index].id\r\n                              )\r\n                            }\r\n                          >\r\n                            <svg\r\n                              id=\"Artboard_2\"\r\n                              data-name=\"Artboard â€“ 2\"\r\n                              className=\"cls-1\"\r\n                            >\r\n                              <rect className=\"cls-14\" width=\"52\" height=\"52\" />\r\n                              <g\r\n                                id=\"Rectangle_116\"\r\n                                data-name=\"Rectangle 116\"\r\n                                className=\"cls-12\"\r\n                              >\r\n                                <rect\r\n                                  className=\"cls-15\"\r\n                                  width=\"52\"\r\n                                  height=\"52\"\r\n                                />\r\n                                <rect\r\n                                  className=\"cls-16\"\r\n                                  x=\"1\"\r\n                                  y=\"1\"\r\n                                  width=\"50\"\r\n                                  height=\"50\"\r\n                                />\r\n                              </g>\r\n                              <path\r\n                                id=\"Path_44\"\r\n                                data-name=\"Path 44\"\r\n                                className=\"cls-13\"\r\n                                d=\"M0,0H36V36H0Z\"\r\n                                transform=\"translate(8 8)\"\r\n                              />\r\n                              <circle\r\n                                id=\"Ellipse_53\"\r\n                                data-name=\"Ellipse 53\"\r\n                                className=\"cls-14\"\r\n                                cx=\"14\"\r\n                                cy=\"14\"\r\n                                r=\"14\"\r\n                                transform=\"translate(12 12)\"\r\n                              />\r\n                            </svg>\r\n                          </span>\r\n                          <span\r\n                            data-value={dynamicAnsMoney[0][index].partij}\r\n                            onClick={() =>\r\n                              handleAnswer(\r\n                                dynamicAnsMoney[0][index].check,\r\n                                dynamicAnsMoney[0][index].partij,\r\n                                dynamicAnsMoney[0][index].id\r\n                              )\r\n                            }\r\n                          >\r\n                            <svg\r\n                              id=\"Artboard_2\"\r\n                              data-name=\"Artboard â€“ 2\"\r\n                              className=\"cls-1\"\r\n                            >\r\n                              <rect className=\"cls-3\" width=\"52\" height=\"52\" />\r\n                              <path\r\n                                id=\"Path_43\"\r\n                                data-name=\"Path 43\"\r\n                                className=\"cls-2\"\r\n                                d=\"M-3011.7,12604.991s11.39-7.488,12.615-5.355-11.808,14.413-7.713,13.893,24.095-19.039,24.095-15.975-24.095,25-24.095,28.232,19.814-14.014,24.095-15.29-6.976,10.194-6.976,10.194\"\r\n                                transform=\"matrix(0.966, 0.259, -0.259, 0.966, 6184.751, -11378.36)\"\r\n                              />\r\n                            </svg>\r\n                          </span>\r\n                        </>\r\n                      )}\r\n                      {quiz[currentQuestion].type === 'kennis' && (\r\n                        <>\r\n                          <span\r\n                            onClick={() =>\r\n                              handleAnswer(\r\n                                answers.check,\r\n                                answers.answer,\r\n                                answers.id\r\n                              )\r\n                            }\r\n                          >\r\n                            <svg\r\n                              id=\"Artboard_2\"\r\n                              data-name=\"Artboard â€“ 2\"\r\n                              className=\"cls-1\"\r\n                            >\r\n                              <rect className=\"cls-14\" width=\"52\" height=\"52\" />\r\n                              <g\r\n                                id=\"Rectangle_116\"\r\n                                data-name=\"Rectangle 116\"\r\n                                className=\"cls-12\"\r\n                              >\r\n                                <rect\r\n                                  className=\"cls-15\"\r\n                                  width=\"52\"\r\n                                  height=\"52\"\r\n                                />\r\n                                <rect\r\n                                  className=\"cls-16\"\r\n                                  x=\"1\"\r\n                                  y=\"1\"\r\n                                  width=\"50\"\r\n                                  height=\"50\"\r\n                                />\r\n                              </g>\r\n                              <path\r\n                                id=\"Path_44\"\r\n                                data-name=\"Path 44\"\r\n                                className=\"cls-13\"\r\n                                d=\"M0,0H36V36H0Z\"\r\n                                transform=\"translate(8 8)\"\r\n                              />\r\n                              <circle\r\n                                id=\"Ellipse_53\"\r\n                                data-name=\"Ellipse 53\"\r\n                                className=\"cls-14\"\r\n                                cx=\"14\"\r\n                                cy=\"14\"\r\n                                r=\"14\"\r\n                                transform=\"translate(12 12)\"\r\n                              />\r\n                            </svg>\r\n                          </span>\r\n                          <span\r\n                            data-value={answers.id}\r\n                            onClick={() =>\r\n                              handleAnswer(\r\n                                answers.check,\r\n                                answers.answer,\r\n                                answers.id\r\n                              )\r\n                            }\r\n                          >\r\n                            <svg\r\n                              id=\"Artboard_2\"\r\n                              data-name=\"Artboard â€“ 2\"\r\n                              className=\"cls-1\"\r\n                            >\r\n                              <rect className=\"cls-3\" width=\"52\" height=\"52\" />\r\n                              <path\r\n                                id=\"Path_43\"\r\n                                data-name=\"Path 43\"\r\n                                className=\"cls-2\"\r\n                                d=\"M-3011.7,12604.991s11.39-7.488,12.615-5.355-11.808,14.413-7.713,13.893,24.095-19.039,24.095-15.975-24.095,25-24.095,28.232,19.814-14.014,24.095-15.29-6.976,10.194-6.976,10.194\"\r\n                                transform=\"matrix(0.966, 0.259, -0.259, 0.966, 6184.751, -11378.36)\"\r\n                              />\r\n                            </svg>\r\n                          </span>\r\n                        </>\r\n                      )}\r\n                      {quiz[currentQuestion].type === 'scenario' && (\r\n                        <button\r\n                          data-value={dynamicAns[indexType][index].id}\r\n                          onClick={() =>\r\n                            handleAnswer(\r\n                              dynamicAns[indexType][index].check,\r\n                              dynamicAns[indexType][index].partij,\r\n                              dynamicAns[indexType][index].id\r\n                            )\r\n                          }\r\n                        >\r\n                          {dynamicAns[indexType][index].partij}\r\n                        </button>\r\n                      )}\r\n                      {quiz[currentQuestion].type === 'gokken' && (\r\n                        <button\r\n                          data-value={dynamicAnsMoney[0][index].id}\r\n                          onClick={() =>\r\n                            handleAnswer(\r\n                              dynamicAnsMoney[0][index].check,\r\n                              dynamicAnsMoney[0][index].partij,\r\n                              dynamicAnsMoney[0][index].id\r\n                            )\r\n                          }\r\n                        >\r\n                          {dynamicAnsMoney[0][index].partij}\r\n                        </button>\r\n                      )}\r\n                      {quiz[currentQuestion].type === 'kennis' && (\r\n                        <button\r\n                          data-value={answers.id}\r\n                          onClick={() =>\r\n                            handleAnswer(\r\n                              answers.check,\r\n                              answers.answer,\r\n                              answers.id\r\n                            )\r\n                          }\r\n                        >\r\n                          {answers.answer}\r\n                        </button>\r\n                      )}\r\n                    </div>\r\n                  </>\r\n                ))}{' '}\r\n              </div>\r\n\r\n              <div class=\"btnSection\">\r\n                <button className=\"clickNext\" onClick={handleNext}>\r\n                  Volgende\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import mainimg from '../images/main.jpg';\r\n\r\nexport default function Start({ setStartQuiz, quiz }) {\r\n  function handleStart() {\r\n    setStartQuiz(false);\r\n  }\r\n  return (\r\n    <div className=\"Start\">\r\n      <h1>\r\n        Quiz over uitgaven van politieke partijen aan facebook en google\r\n        advertenties.\r\n      </h1>\r\n      <img class=\"mainimg\" src={mainimg} alt=\"Illustratie bij de quiz\"></img>\r\n      <div className=\"time\">\r\n        <h2>\r\n          VRAGEN <span className=\"biggertext\">{quiz.length}</span>\r\n        </h2>\r\n        <h2>\r\n          TIJD <span>{quiz.length * 1.5}</span> min\r\n        </h2>\r\n      </div>\r\n      <p>\r\n        Op google en facebook kunnen advertenties worden geplaatst gefocust op\r\n        een specifieke doelgroep. Weet jij welke partijen jouw als belangrijke\r\n        doelgroep zien? Doe de korte quiz...\r\n      </p>\r\n      <button className=\"nextBtn\" onClick={handleStart}>\r\n        Start Quiz\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import * as d3 from 'd3';\r\n\r\nasync function fetchData(link) {\r\n  async function getData(name) {\r\n    const data = await d3.csv(name);\r\n    return data;\r\n  }\r\n\r\n  async function getAllData() {\r\n    const eventData = await getData(link);\r\n\r\n    return eventData;\r\n  }\r\n\r\n  return getAllData().catch((err) => {\r\n    console.log(err);\r\n    console.log('handled!');\r\n  });\r\n}\r\n\r\nexport default fetchData;\r\n","export default __webpack_public_path__ + \"static/media/icon1.9f89a8fc.jpg\";","export default __webpack_public_path__ + \"static/media/icon2.8b7d66fb.jpg\";","export default __webpack_public_path__ + \"static/media/icon3.78737bb8.jpg\";","export default __webpack_public_path__ + \"static/media/icon4.e009c62b.jpg\";","export default __webpack_public_path__ + \"static/media/icon5.f29e9e33.jpg\";","export default __webpack_public_path__ + \"static/media/icon6.c46a10ea.jpg\";","export default __webpack_public_path__ + \"static/media/icon7.f546b8df.jpg\";","export default __webpack_public_path__ + \"static/media/icon8.16c13ccc.jpg\";","export default __webpack_public_path__ + \"static/media/icon9.65e6efc9.jpg\";","import React, { useState, useEffect } from 'react';\n\nimport Questions from './components/Questions';\nimport Start from './components/Start';\nimport fetchData from './helper/data';\nimport formatBarData from './helper/formatBarData';\n\nimport icon1 from './images/icon1.jpg';\nimport icon2 from './images/icon2.jpg';\nimport icon3 from './images/icon3.jpg';\nimport icon4 from './images/icon4.jpg';\nimport icon5 from './images/icon5.jpg';\nimport icon6 from './images/icon6.jpg';\nimport icon7 from './images/icon7.jpg';\nimport icon8 from './images/icon8.jpg';\nimport icon9 from './images/icon9.jpg';\n// import icon10 from './images/icon10.jpg';\n\nexport default function App() {\n  const quiz = [\n    {\n      question:\n        'Welke partij gaf het meeste uit aan advertenties op Facebook en Google?',\n      answers: [\n        { answer: 'dynamic', check: false, id: 'dynamic' },\n        { answer: 'dynamic', check: false, id: 'dynamic' },\n        { answer: 'dynamic', check: false, id: 'dynamic' },\n      ],\n      type: 'gokken',\n      indextype: 0,\n      image: icon1,\n    },\n    {\n      question: 'Wie is de runner-up?',\n      answers: [\n        { answer: 'dynamic', check: false, id: 'dynamic' },\n        { answer: 'dynamic', check: false, id: 'dynamic' },\n        { answer: 'dynamic', check: false, id: 'dynamic' },\n      ],\n      type: 'gokken',\n      indextype: 1,\n      image: icon2,\n    },\n    {\n      question: 'Welke partij adverteert niet online?',\n      answers: [\n        { answer: 'DENK', check: false, id: 'DENK' },\n        { answer: 'ChristenUnie', check: false, id: 'ChristenUnie' },\n        { answer: 'PvdD', check: false, id: 'PvdD' },\n        { answer: 'SP', check: false, id: 'SP' },\n        { answer: 'SGP', check: false, id: 'SGP' },\n        { answer: 'PVV', check: true, id: 'PVV' },\n      ],\n      correct: 'PVV',\n      type: 'kennis',\n      image: icon3,\n    },\n    {\n      question:\n        'Op welke platforms konden politieke partijen geen advertenties kopen?',\n      answers: [\n        { answer: 'LinkedIn & Instagram', check: false, id: 'LI' },\n        { answer: 'Twitter & YouTube', check: false, id: 'TY' },\n        { answer: 'YouTube & Instagram', check: false, id: 'YI' },\n        { answer: 'LinkedIn & Twitter', check: true, id: 'LT' },\n      ],\n      correct: 'LinkedIn & Twitter',\n      type: 'kennis',\n      image: icon4,\n    },\n    {\n      question: 'Welke partij adverteerde online met de campagne #10jaarRutte?',\n      answers: [\n        { answer: 'VVD', check: false, id: 'VVD' },\n        { answer: 'FvD', check: true, id: 'FvD' },\n        { answer: 'SP', check: false, id: 'SP' },\n        { answer: 'GroenLinks', check: false, id: 'GroenLinks' },\n      ],\n      correct: 'FvD',\n      type: 'kennis',\n      image: icon5,\n    },\n    {\n      question:\n        'Maak de zin af. Wie vorig voorjaar op Google zocht naar \"FvD lid worden\", kreeg de volgende tekst voorgeschoteld: \"FvD lid worden? Psst, word lid van ...\"',\n      answers: [\n        { answer: 'PvdA', check: false, id: 'PvdA' },\n        { answer: 'VVD', check: true, id: 'VVD' },\n        { answer: 'SGP', check: false, id: 'SGP' },\n        { answer: 'D66', check: false, id: 'D66' },\n      ],\n      correct: 'VVD',\n      type: 'kennis',\n      image: icon6,\n    },\n    {\n      question:\n        'Welke partij gaf meer advertentiegeld uit aan het promoten van de persoonlijke pagina van de lijsttrekker, dan aan de pagina van de partij?',\n      answers: [\n        { answer: 'VVD', check: false, id: 'VVD' },\n        { answer: 'CDA', check: true, id: 'CDA' },\n        { answer: 'PvdD', check: false, id: 'PvdD' },\n        { answer: 'ChristenUnie', check: false, id: 'ChristenUnie' },\n      ],\n      correct: 'CDA',\n      type: 'kennis',\n      image: icon7,\n    },\n    {\n      question:\n        'De 27-jarige Sanne uit Groningen houdt ervan om na een lange dag werken lekker op de bank door haar Facebook-feed te scrollen. Van welke partij komt zij de meeste advertenties tegen tijdens het scrollen?',\n      answers: [\n        { answer: 'dynamic', check: false, id: 'dynamic' },\n        { answer: 'dynamic', check: false, id: 'dynamic' },\n        { answer: 'dynamic', check: false, id: 'dynamic' },\n      ],\n      type: 'scenario',\n      indextype: 0,\n      image: icon8,\n      category: {\n        gender: 'vrouw',\n        age: '25-34',\n        geo: 'Groningen',\n      },\n    },\n    {\n      question:\n        \"De 19-jarige Dennis kijkt op zondag altijd alle voetbal in z'n studentenkamer in Amsterdam. Ondertussen kijkt hij ook Instagram. Van welke partij ziet hij de meeste advertenties voorbij komen tijdens het scrollen?\",\n      answers: [\n        { answer: 'dynamic', check: false, id: 'dynamic' },\n        { answer: 'dynamic', check: false, id: 'dynamic' },\n        { answer: 'dynamic', check: false, id: 'dynamic' },\n      ],\n      type: 'scenario',\n      indextype: 1,\n      image: icon9,\n      category: {\n        gender: 'man',\n        age: '18-24',\n        geo: 'Noord-Holland',\n      },\n    },\n  ];\n\n  const [startQuiz, setStartQuiz] = useState(true);\n  const [antwoorden, setAntwoord] = useState([]);\n\n  const [dynamicAns, setDynamicAns] = useState([]);\n  const [dynamicAnsMoney, setDynamicAnsMoney] = useState([]);\n\n  //Barchartload state\n  const [dataState, setDataState] = useState([]);\n  //Get the total spend per partij dataset\n  const [totData, setTotData] = useState(null);\n\n  useEffect(() => {\n    async function getData() {\n      const fbData =\n        'https://docs.google.com/spreadsheets/d/119KqNUnKmnSKvQazSW4hv84UF0GgB5hp8ti_n_G4YGU/export?format=csv';\n      const totaalData =\n        'https://docs.google.com/spreadsheets/d/1JQv_AlrbjDIEI1FjwQs8GBT5_HncMtMGbAFrWKhm-1Q/export?format=csv';\n\n      const data1 = await fetchData(fbData);\n      const data2 = await fetchData(totaalData);\n      await formatBarData(\n        quiz,\n        dynamicAns,\n        data1,\n        dataState,\n        data2,\n        dynamicAnsMoney,\n        setTotData\n      );\n    }\n    getData();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      {startQuiz ? (\n        <Start setStartQuiz={setStartQuiz} quiz={quiz} />\n      ) : (\n        <Questions\n          dynamicAns={dynamicAns}\n          dynamicAnsMoney={dynamicAnsMoney}\n          setAntwoord={setAntwoord}\n          antwoorden={antwoorden}\n          quiz={quiz}\n          dataState={dataState}\n          totData={totData}\n          checkIcon={icon5}\n        />\n      )}\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals()"],"sourceRoot":""}